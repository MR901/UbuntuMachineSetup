.ONESHELL:
# to execute multiple line of code using one statement but do note that each line is executed in a new shell.
.PHONY: help collect_data
# to highlight the difference b/w a file/dir and the command

NOW = $(shell /bin/date "+%Y%m%d-%H%M%S")

help:
	echo "The following are some of the valid targets for this Makefile:""
	echo "    collect_data: to collect the data"
	echo "    label_data: "
	echo "    data_manipulation: "
	echo "    train_model: "
	echo "    run_predict_cycle: "
	echo ""

sample:
	cd bin && pwd
	cd bin
	pwd
	./cmt01_run_data_collection.sh
	# able to run multiple line b/c of .ONESHELL

collect_data:
	cd bin && echo "Current Working Directory: `pwd`" && ./cmt01_run_data_collection_module.sh
# 	mv `ls *.boo` subdir
label_data:
	echo "move files"
	labelimg
	echo "Now Manually copy all the txt files to other images that have been clicked under different light"
	#pip3 install labelImg

data_manipulation:
	echo "Creating Reference to the Data using \"cmt02sa_creating_reference_to_data.py\" -- Not used here as will be called internally to cmt03" 

train_model:
	echo "Run the command generated by the code below"
	./cmt03_generating_cmds_for_darknet_frameworks.py

run_predict_cycle:
	python3 -c "exec(\"import sys\nfor r in range(10): print '--'\")"

applications:
	echo "Image Acquisition"
	echo "Image Enhancement"
	echo "Image Restoration"
	echo "Morphological Processing"
	echo "Image Recognition"
	echo "Representation and Description"
	echo ""
	echo "Image Compression and Decompression"
	echo "Color Image Processing"















##########################################################################################

# # For Splitting the data
# flush_all_keys_in_local_redis: 
# 	curl -v http://0.0.0.0:5000/redishook/flushall
# flush_all_keys_in_captain_redis: 
# 	curl -v https://chatbud-action.dev.dev-cglcloud.com/redishook/flushall
# 	#?token=thisismysecret
# 	# curl -XPOST localhost:5005/webhooks/rest/webhook -d '{"sender":"Me","message":"hello"}'
# flush_aus_keys_in_local_redis:
# 	redis-cli --scan --pattern '*australia*' | xargs redis-cli del
# flush_aus_keys_in_captain_redis: 
# 	curl https://chatbud-action.dev.dev-cglcloud.com/redishook/flush_ptrn -d '{"key_ptrn_to_flush":"*australia*"}'
# 	# curl http://0.0.0.0:5000/redishook/flush_ptrn -d '{"key_ptrn_to_flush":"*australia*"}'
# 	# when action is running locally and making use of local redis
# flush_sgp_keys_in_local_redis: 
# 	redis-cli --scan --pattern '*singapore*' | xargs redis-cli del
# flush_sgp_keys_in_captain_redis:
# 	curl https://chatbud-action.dev.dev-cglcloud.com/redishook/flush_ptrn -d '{"key_ptrn_to_flush":"*singapore*"}'
# 	# curl http://0.0.0.0:5000/redishook/flush_ptrn -d '{"key_ptrn_to_flush":"*singapore*"}'
# 	# when action is running locally and making use of local redis
	

# get_samples_from_data_aus:
# 	resources/virtual_env/bin/rasa data split nlu \
# 	--training-fraction 0.5 \
# 	--nlu data/train_data_location/ \
# 	--out app_testing_model/data/train_test_split/aus \
# 	--verbose && \
# 	rm app_testing_model/data/train_test_split/aus/training_data.md
# get_samples_from_data_sgp:
# 	resources/virtual_env/bin/rasa data split nlu \
# 	--training-fraction 0.5 \
# 	--nlu data/train_data_location/ \
# 	--out app_testing_model/data/train_test_split/sgp \
# 	--verbose && \
# 	rm app_testing_model/data/train_test_split/sgp/training_data.md

# prepare_data_aus:
# 	make flush_aus_keys_in_local_redis && \
# 	make flush_aus_keys_in_captain_redis && \
# 	resources/virtual_env/bin/python3 bin/generate_data_v2.py \
# 	--which_location australia \
# 	--faq_tsv_path data/raw_data/uploaded_files/New_HR_ChatBot_Data_-_Mohits_sheet_-_FAQ_AUS_en.tsv \
# 	--chitchat_tsv_path data/raw_data/uploaded_files/ChitchatBotData_LocAll_smaller.tsv && \
# 	make get_samples_from_data_aus
# # 	make flush_keys_in_redis && \
# # 	--faq_tsv_path data/raw_data/uploaded_files/Australia_location_hr_faq_data_file_name_can_be_anything.tsv \
# # 	--chitchat_tsv_path data/raw_data/uploaded_files/ChitchatBotData_LocAll_smaller.tsv && \

# prepare_data_sgp:
# 	make flush_sgp_keys_in_local_redis && \
# 	make flush_sgp_keys_in_captain_redis && \
# 	resources/virtual_env/bin/python3 bin/generate_data_v2.py \
# 	--which_location singapore \
# 	--faq_tsv_path data/raw_data/uploaded_files/New_HR_ChatBot_Data_-_Mohits_sheet_-_FAQ_SGP_en.tsv \
# 	--chitchat_tsv_path data/raw_data/uploaded_files/ChitchatBotData_LocAll_smaller.tsv && \
# 	make get_samples_from_data_sgp
# # 	make flush_keys_in_redis && \
# # 	--faq_tsv_path data/raw_data/uploaded_files/FaqBotData_LocSingapore.tsv \
# # 	--chitchat_tsv_path data/raw_data/uploaded_files/ChitchatBotData_LocAll_smaller.tsv && \

# train-aus:
# 	make prepare_data_aus && \
# 	resources/virtual_env/bin/rasa train \
# 	--data data/train_data_location \
# 	--domain data/train_data_location \
# 	--config config/config.yml \
# 	--out models/aus/ \
# 	--augmentation 30 \
# 	--dump-stories \
# 	--debug-plots \
# 	--persist-nlu-data \
# 	--debug \
# 	--fixed-model-name hr-aus-$(NOW)

# train-sgp:
# 	make prepare_data_sgp && \
# 	resources/virtual_env/bin/rasa train \
# 	--data data/train_data_location \
# 	--domain data/train_data_location \
# 	--config config/config.yml \
# 	--out models/sgp/ \
# 	--augmentation 30 \
# 	--dump-stories \
# 	--debug-plots \
# 	--persist-nlu-data \
# 	--debug \
# 	--fixed-model-name hr-sgp-$(NOW)

# run-aus:
# 	resources/virtual_env/bin/rasa run \
# 	--model models/aus/ \
# 	--enable-api \
# 	--endpoints config/endpoints.yml \
# 	--credentials config/credentials.yml \
# 	--cors '*' \
# 	--debug \
# 	--auth-token thisismysecret

# run-sgp:
# 	resources/virtual_env/bin/rasa run \
# 	--model models/sgp/ \
# 	--enable-api \
# 	--endpoints config/endpoints.yml \
# 	--credentials config/credentials.yml \
# 	--cors '*' \
# 	--debug \
# 	--auth-token thisismysecret

# shell-aus:
# 	resources/virtual_env/bin/rasa shell \
# 	--model models/aus/ \
# 	--debug \
# 	--cors * \
# 	--verbose \
# 	--enable-api \
# 	--endpoints config/endpoints.yml \
# 	--credentials config/credentials.yml \
# 	--auth-token thisismysecret

# shell-sgp:
# 	resources/virtual_env/bin/rasa shell \
# 	--model models/sgp/ \
# 	--debug \
# 	--cors * \
# 	--verbose \
# 	--enable-api \
# 	--endpoints config/endpoints.yml \
# 	--credentials config/credentials.yml \
# 	--auth-token thisismysecret

# nlp-shell-aus:
# 	resources/virtual_env/bin/rasa shell nlu \
# 	--model models/aus/ \
# 	--verbose 

# nlp-shell-sgp:
# 	resources/virtual_env/bin/rasa shell nlu \
# 	--model models/sgp/ \
# 	--verbose 






